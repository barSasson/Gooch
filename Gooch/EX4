    	ORG 200
SIN,STA SAC // SAVE AC
	CIR
	STA SE // SAVE R
	SKI  // CHECK INPUT
	BUN EXT //NO INPUT, EXIT
	
    LDA HL // IF HL==0 INSERTING TO MSB
	CMA // CHANGE BOOLEAN TO FALSE/TRUE
	STA HL
	SZA //CHECK RESULT
	BUN LBT
	BUN HBT
	CLA

LBT,LDA PST I // LOAD THE MSB
	INP // INSERT LSB
	STA PST I // SAVE TO MEMORY
	ISZ PST  // INCREMENT POINTER, AS 16BIT IS FULLED
	AND MSK // ISOLATE NEW INPUT  TO DETRMINE IF INPUT IS ZERO
	BUN BEX // CHECK IF NEW INPUT IS 0



HBT,CLE // CLEAR AC+E
	CLA 
	INP // READING INPUT AND ROTATING
	CIL
	CIL
	CIL
	CIL
	CIL
	CIL
	CIL
	CIL
	STA PST I //SAVE TO MEMORY

		  // (AFTER HBT/LBT THE AC ONLY HOLDS THE NEW CHAR)
BEX,SZA   // IF NEW INPUT IS ZERO, SKIPPING ON ION
    ION // ENABLE INTERRUPT
    LDA SE // RETORING VARS
	CIL
	LDA SAC
 	BUN ZRO I 
		ORG 220
SAC, // save ac
SE, // save e
HL, HEX 0  //  BOOLEAN INDICATING WHICH BYTE TO WRITE(LOW/HIGH)
MSK, HEX 00FF
PST, HEX 600 //pointer to string
